diff --git a/components/sync/engine_impl/get_updates_processor.cc b/components/sync/engine_impl/get_updates_processor.cc
index df71de3ef237e61b5cda7d96fe3a24a8f8f1bf6f..f9cf3398d1aab53fd38c47c8c01d7934a2fc309f 100644
--- a/components/sync/engine_impl/get_updates_processor.cc
+++ b/components/sync/engine_impl/get_updates_processor.cc
@@ -28,6 +28,7 @@ using TypeSyncEntityMap = std::map<ModelType, SyncEntityList>;
 using TypeToIndexMap = std::map<ModelType, size_t>;
 
 bool ShouldRequestEncryptionKey(SyncCycleContext* context) {
+  return false;
   syncable::Directory* dir = context->directory();
   syncable::ReadTransaction trans(FROM_HERE, dir);
   syncable::NigoriHandler* nigori_handler = dir->GetNigoriHandler();
@@ -220,8 +221,15 @@ SyncerError GetUpdatesProcessor::ExecuteDownloadUpdates(
 
   ModelTypeSet partial_failure_data_types;
 
-  SyncerError result = SyncerProtoUtil::PostClientToServerMessage(
-      msg, &update_response, cycle, &partial_failure_data_types);
+  // SyncerError result = SyncerProtoUtil::PostClientToServerMessage(
+  //     msg, &update_response, cycle, &partial_failure_data_types);
+  sync_pb::GetUpdatesResponse* gu_response = new sync_pb::GetUpdatesResponse();
+  InitFakeUpdateResponse(gu_response, request_types);
+  update_response.set_allocated_get_updates(gu_response);
+  // TODO(darkdh): dispatch request to UI and pass back the result
+  for (auto& observer : *cycle->context()->listeners())
+    observer.OnPollSyncCycle();
+  SyncerError result(SyncerError::SYNCER_OK);
 
   DVLOG(2) << SyncerProtoUtil::ClientToServerResponseDebugString(
       update_response);
