diff --git a/components/sync/engine_impl/get_updates_processor.cc b/components/sync/engine_impl/get_updates_processor.cc
index df71de3ef237e61b5cda7d96fe3a24a8f8f1bf6f..ef0d6c8a9050637ce34937e31cd79bd4a1b7b4f4 100644
--- a/components/sync/engine_impl/get_updates_processor.cc
+++ b/components/sync/engine_impl/get_updates_processor.cc
@@ -28,6 +28,7 @@ using TypeSyncEntityMap = std::map<ModelType, SyncEntityList>;
 using TypeToIndexMap = std::map<ModelType, size_t>;
 
 bool ShouldRequestEncryptionKey(SyncCycleContext* context) {
+  return false;
   syncable::Directory* dir = context->directory();
   syncable::ReadTransaction trans(FROM_HERE, dir);
   syncable::NigoriHandler* nigori_handler = dir->GetNigoriHandler();
@@ -37,6 +38,7 @@ bool ShouldRequestEncryptionKey(SyncCycleContext* context) {
 SyncerError HandleGetEncryptionKeyResponse(
     const sync_pb::ClientToServerResponse& update_response,
     syncable::Directory* dir) {
+  return SyncerError(SyncerError::SYNCER_OK);
   bool success = false;
   if (update_response.get_updates().encryption_keys_size() == 0) {
     LOG(ERROR) << "Failed to receive encryption key from server.";
@@ -220,8 +222,9 @@ SyncerError GetUpdatesProcessor::ExecuteDownloadUpdates(
 
   ModelTypeSet partial_failure_data_types;
 
-  SyncerError result = SyncerProtoUtil::PostClientToServerMessage(
-      msg, &update_response, cycle, &partial_failure_data_types);
+  // SyncerError result = SyncerProtoUtil::PostClientToServerMessage(
+  //     msg, &update_response, cycle, &partial_failure_data_types);
+  SyncerError result = ApplyBraveRecords(&update_response, request_types);
 
   DVLOG(2) << SyncerProtoUtil::ClientToServerResponseDebugString(
       update_response);
