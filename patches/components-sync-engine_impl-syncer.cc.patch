diff --git a/components/sync/engine_impl/syncer.cc b/components/sync/engine_impl/syncer.cc
index d4d745fcd5a2d254dfcbdc44ed370e4479b28698..5f54843e0d21984b355ea4b7477f8c1fdfe60a55 100644
--- a/components/sync/engine_impl/syncer.cc
+++ b/components/sync/engine_impl/syncer.cc
@@ -34,6 +34,7 @@ void HandleCycleBegin(SyncCycle* cycle) {
 
 Syncer::Syncer(CancelationSignal* cancelation_signal)
     : cancelation_signal_(cancelation_signal), is_syncing_(false) {}
+    // weak_ptr_factory_(this) {}
 
 Syncer::~Syncer() {}
 
@@ -111,6 +112,7 @@ bool Syncer::DownloadAndApplyUpdates(ModelTypeSet* request_types,
       Difference(*request_types, requested_commit_only_types);
   GetUpdatesProcessor get_updates_processor(
       cycle->context()->model_type_registry()->update_handler_map(), delegate);
+  get_updates_processor.AddBraveRecords(std::move(brave_records_));
   SyncerError download_result;
   do {
     download_result =
@@ -167,9 +169,14 @@ SyncerError Syncer::BuildAndPostCommits(const ModelTypeSet& request_types,
       break;
     }
 
-    SyncerError error = commit->PostAndProcessResponse(
-        nudge_tracker, cycle, cycle->mutable_status_controller(),
-        cycle->context()->extensions_activity());
+    // SyncerError error = commit->PostAndProcessResponse(
+    //     nudge_tracker, cycle, cycle->mutable_status_controller(),
+    //     cycle->context()->extensions_activity());
+    SyncerError error(SyncerError::SYNCER_OK);
+    // TODO(darkdh): do coversion to brave sync record and dispatch to UI thread
+    for (auto& observer : *cycle->context()->listeners())
+      observer.OnNudgeSyncCycle();
+
     commit->CleanUp();
     if (error.value() != SyncerError::SYNCER_OK) {
       return error;
